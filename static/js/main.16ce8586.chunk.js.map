{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16ce8586.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(\r\n                    contact =>\r\n                        contact.id === action.payload.id ? ( contact = action.payload) : contact)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n\r\n    };\r\n\r\n   async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n// {\r\n//     id: 1,\r\n//     name: 'John Doe',\r\n//     email: 'jdoe@gmail.com',\r\n//     phone: '555-555-5555'\r\n// },\r\n// {\r\n//     id: 2,\r\n//     name: 'Karen Williams',\r\n//     email: 'karen@gmail.com',\r\n//     phone: '222-222-2222'\r\n// },\r\n// {\r\n//     id: 3,\r\n//     name: 'Henry Johnson',\r\n//     email: 'henry@gmail.com',\r\n//     phone: '111-111-1111'\r\n// }","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer} from \"../../context\";\r\nimport { Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        } catch (e) {\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const  { showContactInfo } = this.state;\r\n\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name}\r\n                                <i\r\n                                    onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\r\n                                    className=\"fas fa-sort-down\" style={{ cursor: 'pointer'}}\r\n                                />\r\n                                <i className=\"fas fa-times\" style={{ cursor: 'point', float: 'right', color: 'red'}}\r\n                                   onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i\r\n                                        className=\"fa fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            marginRight: '1rem'\r\n                                        }}\r\n                                    />\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from \"./Contact\";\r\nimport { Consumer} from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"diplay-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key= {contact.id} contact={contact}/>\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n                        }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type}\r\n                   name={name}\r\n                   className={classnames('form-control form-control-lg', {'is-invalid':error})}\r\n                   placeholder={placeholder}\r\n                   value={value}\r\n                   onChange={onChange}\r\n\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div> }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label:PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, {Component} from 'react';\r\nimport { Consumer} from \"../../context\";\r\n//import uuid from 'uuid';\r\nimport axios from 'axios'\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({errors: { name: 'Name is Required'}});\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({errors: { email: 'Email is Required'}});\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({errors: { name: 'Phone is Required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data});\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    \r\n                                    <TextInputGroup label=\"Name\"\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Enter Name\"\r\n                                                    value={name}\r\n                                                    onChange={this.onChange}\r\n                                                    error = { errors.name }\r\n                                    />\r\n                                    <TextInputGroup label=\"Email\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Enter Email\"\r\n                                                    value={email}\r\n                                                    onChange={this.onChange}\r\n                                                    error = { errors.email } />\r\n                                    <TextInputGroup label=\"Phone\"\r\n                                                    name=\"phone\"\r\n                                                    placeholder=\"Enter Phone\"\r\n                                                    value={phone}\r\n                                                    onChange={this.onChange}\r\n                                                    error = { errors.phone }/>\r\n\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n       <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n           <div className=\"container\">\r\n               <a href=\"/\" className=\"navbar-brand\">\r\n                   {branding}\r\n               </a>\r\n               <div>\r\n                   <ul className=\"navbar-nav mr-auto\">\r\n                       <li className=\"nav-item\">\r\n                           <Link to=\"/\" className=\"nav-link\">\r\n                              <i className=\"fas fa-home\"></i> Home\r\n                           </Link>\r\n                       </li>\r\n                       <li className=\"nav-item\">\r\n                           <Link to=\"/contact/add\" className=\"nav-link\">\r\n                               <i className=\"fas fa-plus\"></i> Add\r\n                           </Link>\r\n                       </li>\r\n                       <li className=\"nav-item\">\r\n                           <Link to=\"/about\" className=\"nav-link\">\r\n                               <i className=\"fas fa-question\"></i> About\r\n                           </Link>\r\n                       </li>\r\n                   </ul>\r\n               </div>\r\n           </div>\r\n       </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n       title: '',\r\n        body:''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }))\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount...')\r\n    // }\r\n    //\r\n    // componentDidUpdate() {\r\n    //     console.log('componentDidUpdate...')\r\n    // }\r\n    //\r\n    // componentWillUpdate() {\r\n    //     console.log('componentWillUpdate...')\r\n    // }\r\n    //\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log('componentWillReceiveProps...')\r\n    // }\r\n    //\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     return null;\r\n    // }\r\n    //\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     console.log('getSnapshotBeforeUpdate...')\r\n    // }\r\n\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","import React, {Component} from 'react';\r\nimport { Consumer} from \"../../context\";\r\n//import uuid from 'uuid';\r\nimport axios from 'axios'\r\n\r\n\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({errors: { name: 'Name is Required'}});\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({errors: { email: 'Email is Required'}});\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({errors: { name: 'Phone is Required'}});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const { id }  = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                                    <TextInputGroup label=\"Name\"\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Enter Name\"\r\n                                                    value={name}\r\n                                                    onChange={this.onChange}\r\n                                                    error = { errors.name }\r\n                                    />\r\n                                    <TextInputGroup label=\"Email\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Enter Email\"\r\n                                                    value={email}\r\n                                                    onChange={this.onChange}\r\n                                                    error = { errors.email } />\r\n                                    <TextInputGroup label=\"Phone\"\r\n                                                    name=\"phone\"\r\n                                                    placeholder=\"Enter Phone\"\r\n                                                    value={phone}\r\n                                                    onChange={this.onChange}\r\n                                                    error = { errors.phone }/>\r\n\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from \"./components/contacts/AddContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./context\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './App.css';\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n            <Router>\n                <div className=\"App\">\n                    <Header branding=\"Contact Manager\"/>\n                    <div className=\"container\">\n                      <Switch>\n                          <Route exact path=\"/\" component={Contacts} />\n                          <Route exact path=\"/contact/add\" component={AddContact} />\n                          <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                          <Route exact path=\"/about\" component={About} />\n                          <Route exact path=\"/test\" component={Test} />\n                          <Route component={NotFound} />\n                      </Switch>\n                    </div>\n                </div>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}